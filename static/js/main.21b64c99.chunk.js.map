{"version":3,"sources":["IMG_0009.jpg","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Projects","state","projects","_this2","this","axios","get","then","res","data","setState","project_list","splice","react_default","a","createElement","className","slice","map","project","id","name","href","html_url","target","rel","full_name","description","language","React","Component","App","src","headshot","alt","role","aria-label","index_es","icon","faHtml5","faCss3Alt","faJs","faPython","faAngular","faReact","faDocker","faGit","faNpm","faSass","faGithub","faLinkedin","faTwitter","Projects_Projects","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wRCInBC,6MACnBC,MAAQ,CACNC,SAAU,uFAGQ,IAAAC,EAAAC,KAClBC,IAAMC,IAAN,oDAA8DC,KAAK,SAAAC,GACjE,IAAMN,EAAWM,EAAIC,KACrBN,EAAKO,SAAS,CAAER,gDAKlB,IAAMS,EAAeP,KAAKH,MAAMC,SAEhC,OADAS,EAAaC,OAAO,EAAG,GAErBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZL,EAAaM,MAAM,EAAG,GAAGC,IAAI,SAAAC,GAAO,OACnCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWI,GAAID,EAAQC,IACpCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAKI,EAAQE,MACbR,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KACEO,KAAMH,EAAQI,SACdC,OAAO,SACPC,IAAI,uBAEHN,EAAQO,YAGbb,EAAAC,EAAAC,cAAA,SAAII,EAAQQ,aACZd,EAAAC,EAAAC,cAAA,4BAAoBI,EAAQS,UAAY,mBA/BhBC,IAAMC,yBC6I7BC,MA5Hf,WACE,OACElB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAChBH,EAAAC,EAAAC,cAAA,OAAKiB,IAAKC,IAAUC,IAAI,gBAAgBlB,UAAU,gBAClDH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,mBAEFH,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAAA,qBACW,IACTF,EAAAC,EAAAC,cAAA,QAAMoB,KAAK,MAAMC,aAAW,gBAA5B,6BAIFvB,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,+JAKAF,EAAAC,EAAAC,cAAA,0CACiC,IAC/BF,EAAAC,EAAAC,cAAA,KACEO,KAAK,uCACLN,UAAU,YACVQ,OAAO,SACPC,IAAI,uBAJN,YAOK,IATP,6DAYAZ,EAAAC,EAAAC,cAAA,iIAIAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMC,IAASvB,UAAU,SAC1CH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAME,IAAWxB,UAAU,SAC5CH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMG,IAAMzB,UAAU,SACvCH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMI,IAAU1B,UAAU,SAC3CH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMK,IAAW3B,UAAU,SAC5CH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMM,IAAS5B,UAAU,SAC1CH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMO,IAAU7B,UAAU,SAC3CH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMQ,IAAO9B,UAAU,SACxCH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMS,IAAO/B,UAAU,SACxCH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMU,IAAQhC,UAAU,UAE3CH,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVM,KAAK,uCACLE,OAAO,SACPC,IAAI,uBAEJZ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMW,IAAUjC,UAAU,UAE7CH,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVM,KAAK,wDACLE,OAAO,SACPC,IAAI,uBAEJZ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMY,IAAYlC,UAAU,UAE/CH,EAAAC,EAAAC,cAAA,KACEC,UAAU,cACVM,KAAK,yCACLE,OAAO,SACPC,IAAI,uBAEJZ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAiBC,KAAMa,IAAWnC,UAAU,aAKpDH,EAAAC,EAAAC,cAAA,WAASC,UAAU,mBACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,WACW,IACTH,EAAAC,EAAAC,cAAA,QAAMoB,KAAK,MAAMC,aAAW,oBAA5B,iBAIFvB,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,KACEO,KAAK,uCACLN,UAAU,YACVQ,OAAO,SACPC,IAAI,uBAJN,kCAUJZ,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,QACQ,IACNH,EAAAC,EAAAC,cAAA,QAAMoB,KAAK,MAAMC,aAAW,6BAA5B,+CAIFvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,oCACoC,IAClCH,EAAAC,EAAAC,cAAA,QAAMoB,KAAK,MAAMC,aAAW,sBAA5B,mBAMNvB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAlB,uEACyE,IACvEH,EAAAC,EAAAC,cAAA,KAAGO,KAAK,2BAA2BN,UAAU,yBAA7C,wBC7HYqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1D,KAAK,SAAA2D,GACjCA,EAAaC","file":"static/js/main.21b64c99.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_0009.bec9e79a.jpg\";","import React from 'react';\n\nimport axios from 'axios';\n\nexport default class Projects extends React.Component {\n  state = {\n    projects: []\n  };\n\n  componentDidMount() {\n    axios.get(`https://api.github.com/users/austinkrueger/repos`).then(res => {\n      const projects = res.data;\n      this.setState({ projects });\n    });\n  }\n\n  render() {\n    const project_list = this.state.projects;\n    project_list.splice(1, 1);\n    return (\n      <div className=\"project-container\">\n        {project_list.slice(0, 3).map(project => (\n          <div className=\"card-row\" id={project.id}>\n            <div className=\"card-description\">\n              <h3>{project.name}</h3>\n              <p>\n                <a\n                  href={project.html_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {project.full_name}\n                </a>\n              </p>\n              <p>{project.description}</p>\n              <h5>Language Used: {project.language || 'N/A'}</h5>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport headshot from './IMG_0009.jpg';\nimport Projects from './components/Projects';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHtml5,\n  faCss3Alt,\n  faJs,\n  faPython,\n  faAngular,\n  faReact,\n  faDocker,\n  faGit,\n  faNpm,\n  faSass,\n  faGithub,\n  faLinkedin,\n  faTwitter\n} from '@fortawesome/free-brands-svg-icons';\n\nfunction App() {\n  return (\n    <main className=\"main-container\">\n      <header className=\"header-content\">\n        <img src={headshot} alt=\"nice headshot\" className=\"img-element\" />\n        <h3 className=\"header-text\">Austin Krueger</h3>\n      </header>\n      <section className=\"main-content\">\n        <h1>\n          Hi there{' '}\n          <span role=\"img\" aria-label=\"waving emoji\">\n            üëãüèª\n          </span>\n        </h1>\n        <p>My name is Austin, and I'm a full stack engineer.</p>\n        <p>\n          I create designs, front-end experiences, and back-end APIs. I also\n          have experience with deploying scaled applications and orchestrating\n          databases.\n        </p>\n        <p>\n          I'm currently working on a few{' '}\n          <a\n            href=\"https://www.github.com/austinkrueger\"\n            className=\"highlight\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            projects\n          </a>{' '}\n          in order to learn new technologies and sharpen my skills.\n        </p>\n        <p>\n          Outside of technology and the web I enjoy a thrilling book, learning\n          about the culinary arts, and the art of cinema.\n        </p>\n        <div className=\"icon-card\">\n          <p>Here are a few of the technologies I am familiar with: </p>\n          <div className=\"tech-row\">\n            <FontAwesomeIcon icon={faHtml5} className=\"icon\" />\n            <FontAwesomeIcon icon={faCss3Alt} className=\"icon\" />\n            <FontAwesomeIcon icon={faJs} className=\"icon\" />\n            <FontAwesomeIcon icon={faPython} className=\"icon\" />\n            <FontAwesomeIcon icon={faAngular} className=\"icon\" />\n            <FontAwesomeIcon icon={faReact} className=\"icon\" />\n            <FontAwesomeIcon icon={faDocker} className=\"icon\" />\n            <FontAwesomeIcon icon={faGit} className=\"icon\" />\n            <FontAwesomeIcon icon={faNpm} className=\"icon\" />\n            <FontAwesomeIcon icon={faSass} className=\"icon\" />\n          </div>\n          <p>Lastly, here are a few places you can contact me:</p>\n          <div className=\"contact-row\">\n            <a\n              className=\"social-icon\"\n              href=\"https://www.github.com/austinkrueger\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faGithub} className=\"icon\" />\n            </a>\n            <a\n              className=\"social-icon\"\n              href=\"https://www.linkedin.com/in/austin-krueger-425828146/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faLinkedin} className=\"icon\" />\n            </a>\n            <a\n              className=\"social-icon\"\n              href=\"https://www.twitter.com/AustinDevEmoji\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FontAwesomeIcon icon={faTwitter} className=\"icon\" />\n            </a>\n          </div>\n        </div>\n      </section>\n      <section className=\"project-content\">\n        <h1 className=\"projects-header\">\n          Projects{' '}\n          <span role=\"img\" aria-label=\"rocketship emoji\">\n            üöÄ\n          </span>\n        </h1>\n        <Projects />\n        <div className=\"link-row\">\n          <a\n            href=\"https://www.github.com/austinkrueger\"\n            className=\"highlight\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            See eveything I'm working on\n          </a>\n        </div>\n      </section>\n      <section className=\"blog-content\">\n        <h1 className=\"blog-header\">\n          Blogs{' '}\n          <span role=\"img\" aria-label=\"guy behind computer emoji\">\n            üë®üèª‚Äçüíª\n          </span>\n        </h1>\n        <div className=\"blog-row\">\n          <div className=\"blog-description\">\n            Nothing here yet! Check back soon{' '}\n            <span role=\"img\" aria-label=\"toothy smile emoji\">\n              üòÅ\n            </span>\n          </div>\n        </div>\n      </section>\n      <footer className=\"footer\">\n        &copy;2019 All Rights Reserved. Questions, Comments, Book suggestions?{' '}\n        <a href=\"mailto:akruegr@gmail.com\" className=\"highlight margin-left\">\n          Send me an email!\n        </a>\n      </footer>\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}